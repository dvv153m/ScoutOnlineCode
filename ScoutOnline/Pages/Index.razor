@page "/"
@page "/main"

@using System.Drawing
@using BlazorLeaflet.Models



@inject IJSRuntime jsRuntime
@inject ScoutOnline.Core.Map.MapsService MapService
@inject UnitService UnitService

<label style="margin-left:20px">Карта:</label>
<TelerikComboBox Data="MapService.Maps" TextField="Key" ValueField="Key" @bind-Value="CurrentMapType"></TelerikComboBox>

<div id="mapContainer" style="margin-top:10px; width: 100%; height: 90vh;">
    <LeafletMap Map="_mapControl" />
</div>

@code{
    private Map _mapControl;

    private LatLng _mapCenterPosition = new LatLng(59.948080f, 30.326621f);

    private TileLayer CurrentLayer;

    private bool _isInitMap = false;    

    private ScoutOnline.Core.Map.MapType _currentMapType = Core.Map.MapType.Openstreet;
    public ScoutOnline.Core.Map.MapType CurrentMapType
    {
        get { return _currentMapType; }
        set
        {
            if (_isInitMap)
            {
                _currentMapType = value;
                OnMapChange(_currentMapType);
            }
        }
    }

    private void OnMapChange(ScoutOnline.Core.Map.MapType mapType)
    {
        var newMap = MapService.Maps[mapType];
        _mapControl.RemoveLayer(CurrentLayer);

        InitCurrentLayer(newMap);

        _mapControl.AddLayer(CurrentLayer);
    }

    private ScopeModel[] scopesGroup;

    protected override async Task OnInitializedAsync()
    {
        //scopesGroup = await UnitService.GetScopes();
    }

    protected override void OnInitialized()
    {
        _mapControl = new Map(jsRuntime)
        {
            Center = _mapCenterPosition,
            Zoom = 7.8f
        };

        ScoutOnline.Core.Map.MapInfo map = MapService.Maps[_currentMapType];

        InitCurrentLayer(map);

        _mapControl.OnInitialized += () =>
        {
            _mapControl.AddLayer(CurrentLayer);


            PointF[][] points = new PointF[1][];
            points[0] = new PointF[2];
            points[0][0] = new PointF(59.948080f, 30.326621f);
            points[0][1] = new PointF(59.958080f, 30.336621f);
            Polyline polyline = new Polyline { Shape = points, DrawStroke= true, StrokeColor=Color.Red };

            _mapControl.AddLayer(polyline);

            _isInitMap = true;
        };
    }

    private void InitCurrentLayer(ScoutOnline.Core.Map.MapInfo map)
    {
        CurrentLayer = new TileLayer
        {
            UrlTemplate = map.BaseUrl,
            Subdomains = map.Subdomains,
            MaximumZoom = map.MaxZoom,
            Attribution = map.Attribution
        };
    }
}
